@use "screen" as *;

// mediaquery

// 〜767         : sm
//   768〜1439   : md
//        1440〜 : lg

@mixin mediaquery-sm() {
  @media screen and (max-width: $screen-md - 1) {
    @content;
  }
}

@mixin mediaquery-md() {
  @media screen and (min-width: $screen-md) and (max-width: $screen-lg - 1) {
    @content;
  }
}

@mixin mediaquery-lg() {
  @media screen and (min-width: $screen-lg) {
    @content;
  }
}

@mixin mediaquery-not-sm($noPrint:false) {
  @if $noPrint {
    @media screen and (min-width: $screen-md) {
      @content;
    }
  } @else {
    @media print, screen and (min-width: $screen-md) {
      @content;
    }
  }
}

@mixin mediaquery-not-sm--screen {
  @media screen and (min-width: $screen-md) {
    @content;
  }
}

@mixin mediaquery-not-lg() {
  @media screen and (max-width: $screen-lg - 1) {
    @content;
  }
}


@mixin mediaquery-min-width($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

@mixin mediaquery-max-width($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@mixin mediaquery-width($min-width, $max-width) {
  @media screen and (min-width: $min-width) and (max-width: $max-width - 1) {
    @content;
  }
}

@mixin mediaquery-print() {
  /** print */
  @media print {
    @content;
  }
}
